{"version":3,"sources":["assets/images/map.png","components/Home/Home.js","components/Login/Login.jsx","components/Menu/Menu.js","components/LocationDetails.js","components/Location.js","components/LocationListing.js","components/Search/Search.js","components/SwitchesGroup.js","components/MapView/fetchFakeData.js","components/MapView/Popup.js","components/MapView.js","components/Filter.js","components/Copyright/Copyright.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","style","padding","Grid","container","spacing","item","md","xs","icon","Typography","variant","component","gutterBottom","to","textDecoration","Button","color","Login","props","state","email","password","console","log","this","Avatar","noValidate","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","event","setState","target","value","type","FormControlLabel","control","Checkbox","onClick","login","Link","href","Component","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","IconButton","aria-label","aria-controls","aria-haspopup","AppBar","Toolbar","edge","noWrap","InputBase","placeholder","root","input","inputProps","LocationDetails","data","setValue","Card","CardActionArea","src","CardContent","max","FormControl","RadioGroup","Radio","Divider","CardActions","size","disableElevation","Location","locations","status","key","LocationListing","locationData","map","location","Search","handleClick","buttonText","text","setText","Box","pt","Fragment","Container","maxWidth","minWidth","onKeyDown","keyCode","align-Items","SwitchesGroup","water","toilet","handleChange","checked","FormLabel","FormGroup","Switch","getRandomCoordinate","centerLon","longitude","centerLat","latitude","r","Math","sqrt","random","theta","PI","cos","sin","fetchFakeData","centerCoordinates","newFeaturesList","i","push","geometry","coordinates","properties","description","WC","Water","stars","Promise","resolve","features","Popup","feature","ReactDOM","require","mapboxgl","accessToken","MapView","mapContainerRef","useRef","popUpRef","offset","geolocate","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","useEffect","Map","current","center","zoom","addControl","NavigationControl","on","e","coords","MapboxGeocoder","addSource","addLayer","source","layout","a","getCenter","lng","lat","results","getSource","setData","length","getCanvas","cursor","popupNode","document","createElement","render","setLngLat","setDOMContent","addTo","remove","ref","isWater","isWc","Filter","filterResults","waterOn","wcOn","undefined","Error","filterData","Copyright","mt","align","Date","getFullYear","library","add","fab","faHandHoldingWater","App","StylesProvider","injectFirst","path","exact","Home","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9fafd4f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/map.e9993cfc.png\";","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport \"./Home.css\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\" style={{ padding: 20 }}>\r\n      <Grid container spacing={0}>\r\n        <Grid item md></Grid>\r\n        <Grid item xs={12} md={6}>\r\n        <FontAwesomeIcon icon=\"hand-holding-water\" className=\"spl--pb\" />\r\n      <Typography\r\n            variant=\"h2\"\r\n            component=\"h1\"\r\n            gutterBottom\r\n            className=\"spl--pb\"\r\n          >\r\n            Welcome to Oasis\r\n      </Typography>\r\n          <Typography variant=\"body1\" gutterBottom className=\"spl--pb\">\r\n            Find for your nearest drinking water and toilet facilities\r\n      </Typography>\r\n          <Link to=\"/search\" style={{ textDecoration: 'none' }}> \r\n            <Button variant=\"contained\" color=\"primary\" >\r\n              Search locations\r\n            </Button>\r\n          </Link>\r\n          </Grid>\r\n          <Grid item md></Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//import { makeStyles } from '@material-ui/core/styles';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n\r\n\r\n  // const useStyles = makeStyles((theme) => ({\r\n  //   paper: {\r\n  //     marginTop: theme.spacing(8),\r\n  //     display: 'flex',\r\n  //     flexDirection: 'column',\r\n  //     alignItems: 'center',\r\n  //   },\r\n  //   avatar: {\r\n  //     margin: theme.spacing(1),\r\n  //     backgroundColor: theme.palette.secondary.main,\r\n  //   },\r\n  //   form: {\r\n  //     width: '100%', // Fix IE 11 issue.\r\n  //     marginTop: theme.spacing(1),\r\n  //   },\r\n  //   submit: {\r\n  //     margin: theme.spacing(3, 0, 2),\r\n  //   },\r\n  // }));\r\n\r\n  // const classes = useStyles();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n  \r\n  login() {\r\n    console.log('this.state', this.state);\r\n  }\r\n\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <Grid container spacing={0}>\r\n          <Grid item md></Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Avatar /*className={classes.avatar}*/>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography\r\n              variant=\"h3\"\r\n              component=\"h1\"\r\n              gutterBottom\r\n            >\r\n              Login with Email\r\n      </Typography>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              Enter the email address associated with your account\r\n      </Typography>\r\n            <form /*className={classes.form}*/ noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                onChange={event => this.setState({ email: event.target.value })}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={event => this.setState({ password: event.target.value })}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                /*className={classes.submit}*/\r\n                onClick={() => this.login()}\r\n              >\r\n                Continue\r\n          </Button>\r\n            </form>\r\n\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body1\">\r\n                  Forgot password?\r\n              </Link>\r\n              </Grid>\r\n              <Grid item>No account.\r\n              <Link href=\"#\" variant=\"body1\" gutterBottom>\r\n                  {\" Create one\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </Grid>\r\n          <Grid item md></Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Login;","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            <Link to=\"/\" style={{ textDecoration: 'none'}}>Oasis</Link>\r\n          </Typography>\r\n          <Button color=\"inherit\" component={Link} to=\"/login\">Login</Button>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Rating from 'material-ui-rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\n// ES5\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction LocationDetails(data) {\r\n\r\n    const [value, setValue] = React.useState('drinkable');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    console.log(data);\r\n\r\n\r\n    return (\r\n        <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n\r\n                {/* to get this line working you need to install -> npm install material-ui-rating\r\n                 and  npm install @material-ui/icons */}\r\n\r\n\r\n                <Card className=\"spl-root\">\r\n                    <CardActionArea>\r\n                        <img\r\n                            className=\"spl-media\"\r\n                            src=\"https://images.freeimages.com/images/large-previews/113/water-from-spring-1426253.jpg\"\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"h5\">Rating</Typography>\r\n\r\n                            <Rating\r\n                                value={5}\r\n                                max={5}\r\n                                onChange={(value) => console.log(`Rated with value ${value}`)}\r\n                            />\r\n                            <FormControl component=\"fieldset\">\r\n\r\n                                <RadioGroup aria-label=\"gender\" name=\"water\" value={value} onChange={handleChange} className=\"spl-radio\">\r\n                                    <FormControlLabel value=\"drinkable\" control={<Radio color=\"primary\" />} label=\"Drinkable\" />\r\n                                    <Divider />\r\n                                    <FormControlLabel value=\"treatment\" control={<Radio color=\"primary\" />} label=\"Need treatment\" />\r\n                                    <Divider />\r\n                                    <FormControlLabel value=\"undrinkable\" control={<Radio color=\"primary\" />} label=\"Undrinkable\" />\r\n                                    <Divider />\r\n                                    <FormControlLabel value=\"unkown\" control={<Radio color=\"primary\" />} label=\"Unkown\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\">\r\n                            Report a problem\r\n                        </Button>\r\n                        <Button size=\"small\" variant=\"contained\" color=\"primary\" disableElevation>\r\n                            Notify me\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default LocationDetails;","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LocationDetails from \"./LocationDetails\";\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Location({ locations }) {\r\n\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n                {locations.name}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                {locations.status}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <ul>\r\n                <li key={locations.id}>\r\n                    <Link to={`/location-details/${locations.id}`}>{locations.id}</Link>\r\n                </li>\r\n                </ul>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Location;\r\n","import React from 'react';\r\nimport Location from \"./Location\";\r\n\r\n\r\nfunction LocationListing({\r\n    locationData\r\n}) {\r\n    return (\r\n\r\n        locationData.map((location) =>\r\n            < Location locations={location} />\r\n        )\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default LocationListing;","import React, { useState } from 'react';\r\nimport CssBaseLine from '@material-ui/core/CssBaseLine';\r\nimport Container from '@material-ui/core/Container';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport GpsFixedTwoToneIcon from '@material-ui/icons/GpsFixedTwoTone';\r\nimport SettingsTwoToneIcon from '@material-ui/icons/SettingsTwoTone';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Home from '../Home/Home';\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\nfunction Search() {\r\n    const handleClick = (buttonText) => {\r\n        console.log( `${buttonText} Clicked` );\r\n        // depending on which button is clicked, call the corresponding component.\r\n        // for geolocation need to call the LocationListing (or a new SearchLocation component) with geolocation\r\n        // is there anyway to \"mimic\" what gets pressed with the geolocation search?\r\n        //\r\n        // <LocationListing locationData={<geolocation>} />\r\n        //\r\n        // for Manage Saved Locations, this will need to be a new component I think.\r\n    }\r\n    \r\n    const [text, setText] = useState(\"\");\r\n\r\n    //  replaced below by in-line ES6 arrow function instead.\r\n    // const handleTextChange = ( event ) => {\r\n    //     setText(event.target.value);\r\n    // }\r\n\r\n    const handleEnterKeyPress = ( event ) => {\r\n        if ( event.keyCode === 13 ) {\r\n            // console.log( `${event.target.value} <Enter>`);  // both versions work.\r\n            console.log( `${text}<ENTER>`);\r\n            setText(\"\");\r\n            // here we need to pass the value of what's been entered so far and call the map search\r\n            // perhaps something like this:\r\n            // \r\n            // <LocationListing locationData={event.target.value} />\r\n            // but locationData needs to be in a simpler format as\r\n            // need to check with Sanae how she calls the map API function \r\n            // if only the location name is given (eg London)\r\n            // like the normal search function, this may require an intermediate component\r\n            // to get longitude and latitude coordinates - depends on how we want LocationListing to work.\r\n            //\r\n            // in Heather's example for adding a new task, she calls\r\n            // props.addTask()\r\n        }\r\n    }\r\n\r\n\r\n    return ( \r\n        // now we show the Search text input\r\n        <div className=\"Search\">\r\n\r\n            <Box pt={6}>\r\n                <React.Fragment>\r\n                    {<CssBaseLine />}\r\n                    <Container maxWidth=\"sm\">\r\n                        <SearchIcon />\r\n                        <TextField className=\"textBox spl--tb-colors\"\r\n                            variant=\"filled\"\r\n                            id=\"input-with-icon-grid\"\r\n                            label=\"Search locations\"\r\n                            style={{ minWidth: 350, maxWidth: 800 }}\r\n                            // onChange={ handleTextChange }\r\n                            onChange={ (event) => setText( event.target.value )}\r\n                            onKeyDown={ handleEnterKeyPress }\r\n                            value={ text }\r\n                        />\r\n                    </Container>\r\n                </React.Fragment>\r\n\r\n                <React.Fragment>\r\n                    {<CssBaseLine />}\r\n                    <Container maxWidth=\"sm\">\r\n                        <IconButton onClick={ () => handleClick('gelocation') }>\r\n                            <GpsFixedTwoToneIcon />Find Nearest Facility\r\n                        </IconButton>\r\n                    </Container>\r\n                </React.Fragment>\r\n\r\n                <React.Fragment>\r\n                    {<CssBaseLine />}\r\n                    <Container maxWidth=\"sm\" align-Items=\"flex-start\"  className=\"spl--settingsIconColor\">\r\n                        <IconButton onClick={ () => handleClick('savedLocations') } >\r\n                            <SettingsTwoToneIcon />Manage Saved Locations\r\n                        </IconButton>\r\n                    </Container>\r\n                </React.Fragment>\r\n            </Box>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n\r\n            {/* <Grid container spacing={1} alignItems=\"flex-start\" >\r\n                <Grid item >\r\n                    <SearchIcon />\r\n                </Grid>\r\n                <Grid item >\r\n                    <TextField className=\"textBox\"\r\n                        variant=\"filled\"\r\n                        id=\"input-with-icon-grid\"\r\n                        label=\"Search locations\"\r\n                        style={{ minWidth: 350, maxWidth: 800 }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={1} alignItems=\"flex-start\">\r\n                <Grid item >\r\n                    <IconButton>\r\n                        <GpsFixedTwoToneIcon />Find Nearest Facility\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={1} alignItems=\"flex-start\">\r\n                <Grid item >\r\n                    <IconButton>\r\n                        <SettingsTwoToneIcon />Manage Saved Locations\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid> */}\r\n\r\n\r\n\r\n        // // if Search isn't part of the Header, then it should call Header to bring into background \r\n\r\n        // // now we show the Search text input\r\n        // <div className=\"Search\">\r\n        //     {/* <Header /> */}\r\n        //     <Grid container spacing={1} alignItems=\"flex-end\" >\r\n        //         <Grid item >\r\n        //             <SearchIcon />\r\n        //         </Grid>\r\n        //         <Grid item >\r\n        //             <TextField className=\"textBox\"\r\n        //                 variant=\"filled\"\r\n        //                 id=\"input-with-icon-grid\"\r\n        //                 label=\"Search locations\"\r\n        //                 style={{ minWidth: 350, maxWidth: 800 }}\r\n        //             />\r\n        //         </Grid>\r\n        //     </Grid>\r\n        //     <Grid container spacing={1} alignItems=\"flex-end\">\r\n        //         <Grid item >\r\n        //             <IconButton>\r\n        //                 <GpsFixedTwoToneIcon />Find Nearest Facility\r\n        //             </IconButton>\r\n        //         </Grid>\r\n        //     </Grid>\r\n        //     <Grid container spacing={1} alignItems=\"flex-end\">\r\n        //         <Grid item >\r\n        //             <IconButton>\r\n        //                 <SettingsTwoToneIcon />Manage Saved Locations\r\n        //             </IconButton>\r\n        //         </Grid>\r\n        //     </Grid>\r\n\r\n        // </div>\r\n","import React from \"react\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport \"../App.css\";\r\n\r\nexport default function SwitchesGroup() {\r\n  const [state, setState] = React.useState({\r\n    water: true,\r\n    toilet: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"filterTitle\" className=\"spl-filterTitle\">\r\n        Filter Results\r\n      </FormLabel>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={state.water}\r\n              color=\"primary\"\r\n              onChange={handleChange}\r\n              name=\"water\"\r\n            />\r\n          }\r\n          label=\"Water\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={state.toilet}\r\n              color=\"primary\"\r\n              onChange={handleChange}\r\n              name=\"toilet\"\r\n            />\r\n          }\r\n          label=\"Toilets\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n","\r\n\r\nfunction fetchFakeData(centerCoordinates) {\r\n    const newFeaturesList = [];\r\n    for (let i = 0; i < 20; i++) {\r\n        const id = i;\r\n        const { longitude, latitude } = getRandomCoordinate(centerCoordinates);\r\n        newFeaturesList.push({\r\n            type: 'Feature',\r\n            geometry: {\r\n                type: 'Point',\r\n                coordinates: [longitude, latitude],\r\n            },\r\n            properties: {\r\n                id,\r\n                name: `Random Point #${id}`,\r\n                description: `description for Random Point #${id}`,\r\n                WC: true,\r\n                Water: true,\r\n                stars: 4,\r\n                status: 'drinkable'\r\n            },\r\n        });\r\n    }\r\n    return Promise.resolve({\r\n        type: 'FeatureCollection',\r\n        features: newFeaturesList,\r\n    });\r\n};\r\n\r\n/**\r\n * Generates a random point within 0.025 radius of map center coordinates.\r\n * @param {CoordinatePair} centerCoordinates - the {@link CoordinatePair} for the map center\r\n * @return {CoordinatePair} randomly generated coordinate pair\r\n */\r\nconst getRandomCoordinate = ({ longitude: centerLon, latitude: centerLat }) => {\r\n    const r = 0.025 * Math.sqrt(Math.random());\r\n    const theta = Math.random() * 2 * Math.PI;\r\n    const latitude = centerLat + r * Math.cos(theta);\r\n    const longitude = centerLon + r * Math.sin(theta);\r\n    return { longitude, latitude };\r\n};\r\n\r\nexport default fetchFakeData;","import React, { Component } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Rating from 'material-ui-rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nconst Popup = ({ feature }) => {\r\n    const { id, name, description, status, stars } = feature.properties;\r\n\r\n    const [value, setValue] = React.useState(status);\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    return (\r\n        // <div id={`popup-${id}`} className=\"popupdiv\">\r\n        //     <h3>{name}</h3>\r\n        //     {description}\r\n        // </div>\r\n\r\n        <Grid container spacing={0}>\r\n            <Grid item xs={12}>\r\n\r\n                {/* to get this line working you need to install -> npm install material-ui-rating\r\n                 and  npm install @material-ui/icons */}\r\n\r\n\r\n                <Card className=\"spl-root\">\r\n                    <CardActionArea>\r\n                        <img\r\n                            className=\"spl-media\"\r\n                            src=\"https://images.freeimages.com/images/large-previews/113/water-from-spring-1426253.jpg\"\r\n                            title=\"Contemplative Reptile\"\r\n                        />\r\n                        <CardContent>\r\n                            <Typography variant=\"h6\">Rating</Typography>\r\n\r\n                            <Rating\r\n                                value={stars}\r\n                                max={5}\r\n                                onChange={(value) => console.log(`Rated with value ${value}`)}\r\n                            />\r\n                            <FormControl component=\"fieldset\">\r\n\r\n                                <RadioGroup aria-label=\"gender\" name=\"water\" value={status} onChange={handleChange} className=\"spl-radio\">\r\n                                    <FormControlLabel value=\"drinkable\" control={<Radio color=\"primary\" />} label=\"Drinkable\" />\r\n                                    <Divider />\r\n                                    <FormControlLabel value=\"treatment\" control={<Radio color=\"primary\" />} label=\"Need treatment\" />\r\n                                    <Divider />\r\n                                    <FormControlLabel value=\"undrinkable\" control={<Radio color=\"primary\" />} label=\"Undrinkable\" />\r\n                                    <Divider />\r\n                                    <FormControlLabel value=\"unkown\" control={<Radio color=\"primary\" />} label=\"Unkown\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                        <Button size=\"small\" color=\"primary\">\r\n                            Report a problem\r\n                        </Button>\r\n                        <Button size=\"small\" variant=\"contained\" color=\"primary\" disableElevation>\r\n                            Notify me\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Popup;","import map from \"../assets/images/map.png\"; // relative path to image\r\nimport React, { useRef, useEffect } from \"react\";\r\nimport mapboxgl from 'mapbox-gl';\r\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';\r\nimport fetchFakeData from './MapView/fetchFakeData';\r\n//import Marker from './MapView/Marker'; unused marker\r\nimport Popup from './MapView/Popup';\r\n\r\n// for using maps you need to install ->  npm install mapbox-gl --save\r\n// install for search feild -> npm install --save @mapbox/mapbox-gl-geocoder\r\n//install readdom -> npm install react react-dom\r\n\r\nvar ReactDOM = require('react-dom');\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2FuYWVzcGxhc2giLCJhIjoiY2tmYTlwMWpmMHR0cDJ0cHAyOHZhd3V0MSJ9.PmRGRrM4p1wgKavJKm-56A'\r\n\r\n\r\nconst MapView = () => {\r\n  const mapContainerRef = useRef(null);\r\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: [20, 0] }));\r\n  const geolocate = new mapboxgl.GeolocateControl({\r\n    positionOptions: {\r\n      enableHighAccuracy: true\r\n    },\r\n    trackUserLocation: true\r\n  });\r\n  // initialize map when component mounts\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      // See style options here: https://docs.mapbox.com/api/maps/#styles\r\n      style: 'mapbox://styles/mapbox/streets-v11',\r\n      center: [-1.9876, 51.7405],\r\n      zoom: 12.5,\r\n    });\r\n  \r\n    // add navigation control (the +/- zoom buttons) and geolocate user\r\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\r\n    map.addControl(geolocate.on('geolocate', function (e) {\r\n      var lon = e.coords.longitude;\r\n      var lat = e.coords.latitude\r\n      var position = [lon, lat];\r\n      // console.log(position);\r\n\r\n    })\r\n    );\r\n    map.addControl(\r\n      new MapboxGeocoder({\r\n        accessToken: mapboxgl.accessToken,\r\n        mapboxgl: mapboxgl\r\n      })\r\n    );\r\n\r\n    map.on(\"load\", () => {\r\n      // add the data source for new a feature collection with no features\r\n     // geolocate.trigger(); -> use when the search button is triggered \r\n      map.addSource(\"random-points-data\", {\r\n        type: \"geojson\",\r\n        data: {\r\n          type: \"FeatureCollection\",\r\n          features: []\r\n        }\r\n      });\r\n      // now add the layer, and reference the data source above by name\r\n      map.addLayer({\r\n        id: \"random-points-layer\",\r\n        source: \"random-points-data\",\r\n        type: \"symbol\",\r\n        layout: {\r\n          // full list of icons here: https://labs.mapbox.com/maki-icons\r\n          \"icon-image\": \"drinking-water-15\",\r\n          \"icon-padding\": 0,\r\n          'icon-size': 1.5,\r\n          \"icon-allow-overlap\": true\r\n        }\r\n      });\r\n    \r\n    });\r\n\r\n    map.on(\"moveend\", async () => {\r\n      // get new center coordinates\r\n      const { lng, lat } = map.getCenter();\r\n      // fetch new data\r\n      const results = await fetchFakeData({ longitude: lng, latitude: lat });\r\n      // update \"random-points-data\" source with new data\r\n      // all layers that consume the \"random-points-data\" data source will be updated automatically\r\n      map.getSource(\"random-points-data\").setData(results);\r\n    });\r\n\r\n    // change cursor to pointer when user hovers over a clickable feature\r\n    map.on(\"mouseenter\", \"random-points-layer\", e => {\r\n      if (e.features.length) {\r\n        map.getCanvas().style.cursor = \"pointer\";\r\n      }\r\n    });\r\n\r\n    // reset cursor to default when user is no longer hovering over a clickable feature\r\n    map.on(\"mouseleave\", \"random-points-layer\", () => {\r\n      map.getCanvas().style.cursor = \"\";\r\n    });\r\n\r\n    // add popup when user clicks a point\r\n    map.on(\"click\", \"random-points-layer\", e => {\r\n      if (e.features.length) {\r\n        const feature = e.features[0];\r\n        // create popup node\r\n        const popupNode = document.createElement(\"div\");\r\n        ReactDOM.render(<Popup feature={feature} />, popupNode);\r\n        // set popup on map\r\n        popUpRef.current\r\n          .setLngLat(feature.geometry.coordinates)\r\n          .setDOMContent(popupNode)\r\n          .addTo(map);\r\n      }\r\n    });\r\n\r\n    // map.on('moveend', async () => {\r\n    //   // get center coordinates\r\n    //   const { lng, lat } = map.getCenter();\r\n    //   // fetch new data\r\n    //   const results = await fetchFakeData({ longitude: lng, latitude: lat });\r\n    //   // iterate through the feature collection and append marker to the map for each feature\r\n    //   results.features.forEach(result => {\r\n    //     const { id, geometry } = result;\r\n    //     // create marker node\r\n    //     const markerNode = document.createElement('div');\r\n    //     ReactDOM.render(<Marker id={id} />, markerNode);\r\n    //     // add marker to map\r\n    //     new mapboxgl.Marker(markerNode)\r\n    //       .setLngLat(geometry.coordinates)\r\n    //       .addTo(map);\r\n    //   });\r\n    // });\r\n\r\n    // clean up on unmount\r\n    return () => map.remove();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return <div className=\"map-container\" ref={mapContainerRef} />;\r\n};\r\n\r\nexport default MapView;","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SwitchesGroup from \"./SwitchesGroup\";\r\nimport MapView from \"./MapView\";\r\nimport LocationListing from \"./LocationListing\";\r\n\r\nconst locations = [\r\n  {\r\n    id: 1,\r\n    name: \"london\",\r\n    longitude: \"51.5074\",\r\n    latitude: \" 0.1278\",\r\n    status: \"Drinkable\",\r\n    isWater: false,\r\n    isWc: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Santiago\",\r\n    longitude: \"54.5074\",\r\n    latitude: \" 7.1278\",\r\n    status: \"Need traitment\",\r\n    isWater: true,\r\n    isWc: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Santiago\",\r\n    longitude: \"94.5074\",\r\n    latitude: \" 7.1278\",\r\n    status: \"Drinkable\",\r\n    isWater: true,\r\n    isWc: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Santiago\",\r\n    longitude: \"04.5074\",\r\n    latitude: \" 7.1278\",\r\n    status: \"Uknown\",\r\n    isWater: true,\r\n    isWc: true,\r\n  },\r\n];\r\n\r\nfunction Filter() {\r\n  const filterData = (locations, state) => {\r\n    if (locations === undefined) throw new Error(\"locations is required\");\r\n    if (state === undefined) throw new Error(\"state is required\");\r\n\r\n    var results = [];\r\n\r\n    if (state.waterOn) {\r\n      console.log(\"water is ON\");\r\n      for (let i = 0; i < locations.length; i++) {\r\n        if (locations[i].isWater) {\r\n          results.push(locations[i]);\r\n        }\r\n      }\r\n    } else if (state.wcOn) {\r\n      console.log(\"Toilets is ON\");\r\n      for (let i = 0; i < locations.length; i++) {\r\n        if (locations[i].isWc) {\r\n          results.push(locations[i]);\r\n        }\r\n      }\r\n    }\r\n    console.log(results);\r\n    return results;\r\n  };\r\n\r\n  const filterResults = (state) => {\r\n    if (state.waterOn && state.wcOn) {\r\n      console.log(\"Both filters are ON\");\r\n      return locations;\r\n    } else {\r\n      return filterData(locations, state);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12} md={12}>\r\n        <MapView />\r\n        <LocationListing locationData={locations} />\r\n      </Grid>\r\n      <Grid item xs={12} md={12}>\r\n        <SwitchesGroup filterResults={filterResults} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport './Copyright.css';\r\n\r\nfunction Copyright() {\r\n    return (\r\n    <Box mt={8}>\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Copyright © '}\r\n        <Link color=\"inherit\" href=\"/\">\r\n          Splashpool\r\n        </Link>{' '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n\r\nexport default Copyright;","import React, { useState } from \"react\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Login from \"./components/Login/Login.jsx\";\r\nimport Menu from \"./components/Menu/Menu\";\r\nimport LocationListing from \"./components/LocationListing\";\r\nimport LocationDetails from \"./components/LocationDetails\";\r\nimport \"fontsource-montserrat\";\r\nimport Search from \"./components/Search/Search\";\r\nimport Filter from \"./components/Filter\";\r\nimport MapView from \"./components/MapView\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faHandHoldingWater } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Copyright from \"./components/Copyright/Copyright\";\r\n\r\nlibrary.add(fab, faHandHoldingWater);\r\n\r\nfunction App() {\r\n  // const [locations, setlocation] = useState([\r\n  //   {\r\n  //     id: 1,\r\n  //     name: \"london\",\r\n  //     longitude: \"51.5074\",\r\n  //     latitude: \" 0.1278\",\r\n  //     status: \"Drinkable\",\r\n  //   },\r\n  //   {\r\n  //     id: 2,\r\n  //     name: \"Santiago\",\r\n  //     longitude: \"54.5074\",\r\n  //     latitude: \" 7.1278\",\r\n  //     status: \"Need traitment\",\r\n  //   },\r\n  //   {\r\n  //     id: 3,\r\n  //     name: \"Santiago\",\r\n  //     longitude: \"94.5074\",\r\n  //     latitude: \" 7.1278\",\r\n  //     status: \"Drinkable\",\r\n  //   },\r\n  //   {\r\n  //     id: 4,\r\n  //     name: \"Santiago\",\r\n  //     longitude: \"04.5074\",\r\n  //     latitude: \" 7.1278\",\r\n  //     status: \"Uknown\",\r\n  //   },\r\n  // ]);\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Menu />\r\n          <Container maxWidth=\"md\">\r\n            <div>\r\n              <nav>\r\n                <ul>\r\n                  <li>\r\n                    <Link to=\"/\">Home</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/locations\">Locations</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/search\">Search</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/login\">Login</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/location-details/:number\">location-details</Link>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n\r\n              <Switch>\r\n                <Route path=\"/locations\">\r\n                  <Filter />\r\n                </Route>\r\n                <Route path=\"/search\" component={Search} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route\r\n                  path=\"/location-details/:number\"\r\n                  component={LocationDetails}\r\n                />\r\n                <Route path=\"/\" exact={true} component={Home} />\r\n              </Switch>\r\n            </div>\r\n          </Container>\r\n          <Copyright />\r\n        </div>\r\n      </Router>\r\n    </StylesProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.register();"],"sourceRoot":""}